// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(PostgresDataContext))]
    partial class PostgresDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.HomeAbout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("HomeAbout");
                });

            modelBuilder.Entity("Domain.Entities.HomeBanner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundImageAlt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BackgroundImageHeight")
                        .HasColumnType("integer");

                    b.Property<string>("BackgroundImageSrc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BackgroundImageWidth")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("HomeBanner");
                });

            modelBuilder.Entity("Domain.Entities.HomePortfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundImageAlt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BackgroundImageHeight")
                        .HasColumnType("integer");

                    b.Property<string>("BackgroundImageSrc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BackgroundImageWidth")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("HomePortfolio");
                });

            modelBuilder.Entity("Domain.Entities.ProjectCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("HomePortfolioId")
                        .HasColumnType("integer");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HomePortfolioId");

                    b.ToTable("ProjectCard");
                });

            modelBuilder.Entity("Domain.Entities.TechnologyCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeAboutId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HomeAboutId");

                    b.ToTable("TechnologyCard");
                });

            modelBuilder.Entity("Domain.Entities.ProjectCard", b =>
                {
                    b.HasOne("Domain.Entities.HomePortfolio", null)
                        .WithMany("ProjectCards")
                        .HasForeignKey("HomePortfolioId");
                });

            modelBuilder.Entity("Domain.Entities.TechnologyCard", b =>
                {
                    b.HasOne("Domain.Entities.HomeAbout", null)
                        .WithMany("TechnologyCards")
                        .HasForeignKey("HomeAboutId");
                });

            modelBuilder.Entity("Domain.Entities.HomeAbout", b =>
                {
                    b.Navigation("TechnologyCards");
                });

            modelBuilder.Entity("Domain.Entities.HomePortfolio", b =>
                {
                    b.Navigation("ProjectCards");
                });
#pragma warning restore 612, 618
        }
    }
}
